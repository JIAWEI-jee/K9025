C51 COMPILER V9.56.0.0   KEY                                                               09/23/2020 12:24:28 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\output\key.obj
COMPILER INVOKED BY: C:\program_list\keil\C51\BIN\C51.EXE ..\HAEDWARE\Key\key.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..
                    -\source;..\HAEDWARE\Flash;..\HAEDWARE\DELAY;..\HAEDWARE\HT1621B;..\HAEDWARE\Uart;..\HAEDWARE\Key;..\HAEDWARE\Timer;..\HA
                    -EDWARE\Pwm;..\HAEDWARE\ADC;..\HAEDWARE\WDT) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) TABS(2) OBJECT(.\output\key.obj
                    -)

line level    source

   1          #include "key.h"
   2          #include "delay.h"
   3          #include "flash.h"
   4          u8 calibration_std = 0;
   5          #define KEY_PRESS_TIME 700
   6          
   7          void key_init(void)
   8          {
   9   1        P3M5 = 0x61;                        //P35设置为非施密特数字带上拉输入
  10   1        P2M5 = 0x61;                        //P25设置为非施密特数字带上拉输入
  11   1        P2M6 = 0x61;                        //P26设置为非施密特数字带上拉输入
  12   1      //  P0M2 = 0x61;                        //P02设置为非施密特数字带上拉输入
  13   1      }
  14          
  15          
  16          static unsigned char key_driver ( void )
  17          {
  18   1        static unsigned char key_state = 0;
  19   1        static unsigned int key_time = 0;
  20   1        unsigned char key_press, key_return;
  21   1      
  22   1        key_return = N_KEY;
  23   1      
  24   1        key_press = KEY_1;
  25   1        switch ( key_state )
  26   1        {
  27   2          case KEY_STATE_0:
  28   2            if ( key_press == 0 )
  29   2            {
  30   3              key_time = 0;
  31   3              key_state = KEY_STATE_1;
  32   3            }
  33   2            break;
  34   2      
  35   2          case KEY_STATE_1:
  36   2            if ( key_press == 0 )
  37   2            {
  38   3              key_time++;
  39   3              if ( key_time>=SINGLE_KEY_TIME )
  40   3              {
  41   4                key_state = KEY_STATE_2;
  42   4              }
  43   3              delay_ms ( 10 );
  44   3            }
  45   2            else
  46   2            {
  47   3              key_state = KEY_STATE_0;
  48   3            }
  49   2            break;
  50   2      
  51   2          case KEY_STATE_2:
  52   2            if ( key_press == 1 )
C51 COMPILER V9.56.0.0   KEY                                                               09/23/2020 12:24:28 PAGE 2   

  53   2            {
  54   3              key_return = KEY_1_SHORT;
  55   3              key_state = KEY_STATE_0;
  56   3            }
  57   2            else
  58   2            {
  59   3              key_time++;
  60   3      
  61   3              if ( key_time >= LONG_KEY_TIME )
  62   3              {
  63   4                key_return = KEY_1_LONG;
  64   4                key_state = KEY_STATE_3;
  65   4              }
  66   3              delay_ms ( 10 );
  67   3            }
  68   2            break;
  69   2      
  70   2          case KEY_STATE_3:
  71   2            if ( key_press == 1 )
  72   2            {
  73   3              key_state = KEY_STATE_0;
  74   3            }
  75   2            break;
  76   2      
  77   2          default:
  78   2            key_state = KEY_STATE_0;
  79   2            break;
  80   2        }
  81   1      
  82   1        return key_return;
  83   1      
  84   1      }
  85          static unsigned char Calibration_key_driver ( void )
  86          {
  87   1        static unsigned char key_state = 0;
  88   1        static unsigned int key_time = 0;
  89   1        unsigned char key_press, key_return;
  90   1      
  91   1        key_return = N_KEY;
  92   1      
  93   1        key_press = KEY_2;
  94   1        switch ( key_state )
  95   1        {
  96   2          case KEY_STATE_0:
  97   2            if ( key_press == 0 )
  98   2            {
  99   3              key_time = 0;
 100   3              key_state = KEY_STATE_1;
 101   3            }
 102   2            break;
 103   2      
 104   2          case KEY_STATE_1:
 105   2            if ( key_press == 0 )
 106   2            {
 107   3              key_time++;
 108   3              if ( key_time>=SINGLE_KEY_TIME )
 109   3              {
 110   4                key_state = KEY_STATE_2;
 111   4              }
 112   3              delay_ms ( 10 );
 113   3            }
 114   2            else
C51 COMPILER V9.56.0.0   KEY                                                               09/23/2020 12:24:28 PAGE 3   

 115   2            {
 116   3              key_state = KEY_STATE_0;
 117   3            }
 118   2            break;
 119   2      
 120   2          case KEY_STATE_2:
 121   2            if ( key_press == 1 )
 122   2            {
 123   3              key_return = KEY_1_SHORT;
 124   3              key_state = KEY_STATE_0;
 125   3            }
 126   2            else
 127   2            {
 128   3              key_time++;
 129   3      
 130   3              if ( key_time >=  LONG_KEY_CALI_TIME )
 131   3              {
 132   4                key_return = KEY_CALI2_LONG;
 133   4                key_state = KEY_STATE_3;
 134   4              }
 135   3              delay_ms ( 10 );
 136   3            }
 137   2            break;
 138   2      
 139   2          case KEY_STATE_3:
 140   2            if ( key_press == 1 )
 141   2            {
 142   3              key_state = KEY_STATE_0;
 143   3            }
 144   2            break;
 145   2      
 146   2          default:
 147   2            key_state = KEY_STATE_0;
 148   2            break;
 149   2        }
 150   1      
 151   1        return key_return;
 152   1      
 153   1      }
 154          
 155          u8 key_scan ( void )
 156          {
 157   1        static u8 key_up = 1;
 158   1        static u16 key_pres_time = 0;
 159   1      
 160   1      
 161   1        if ( key_driver() == KEY_1_LONG )
 162   1        {
 163   2          return KEY_1_PRES;
 164   2        }
 165   1        if ( Calibration_key_driver() ==  KEY_CALI2_LONG )
 166   1        {
 167   2          if ( ( get_device_state (  )  == OFF ) && ( flash_info.correct_std == 0 ) )
 168   2          {
 169   3            calibration_std = 1;
 170   3            flash_info.correct_std = 1;
 171   3            flah_save_data();
 172   3          }
 173   2          else
 174   2          {
 175   3            calibration_std = 0;
 176   3          }
C51 COMPILER V9.56.0.0   KEY                                                               09/23/2020 12:24:28 PAGE 4   

 177   2        }
 178   1        else if ( key_up && ( KEY_2 == 0 || KEY_3 == 0 ) && ( calibration_std == 0 ) )
 179   1        {
 180   2          delay_ms ( 50 );
 181   2          key_up=0;
 182   2          if ( KEY_2 == 0 )
 183   2          {
 184   3            return KEY_3_PRES;
 185   3          }
 186   2          else if ( KEY_3 == 0 )
 187   2          {
 188   3            return KEY_2_PRES;
 189   3          }
 190   2        }
 191   1        else if ( KEY_2 == 1 && KEY_3 == 1 )
 192   1        {
 193   2          key_up=1;
 194   2        }
 195   1      
 196   1        if ( KEY_1 == 1 && key_pres_time > 1 )
 197   1        {
 198   2          key_pres_time = 0;
 199   2        }
 200   1        return 0;
 201   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    507    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
